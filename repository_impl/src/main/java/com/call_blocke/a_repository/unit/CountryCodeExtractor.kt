package com.call_blocke.a_repository.unit

import android.telephony.SubscriptionInfo
import android.telephony.TelephonyManager

object CountryCodeExtractor {
    val isoCodeMap = mutableMapOf(
        "93" to "af",
        "355" to "al",
        "213" to "dz",
        "1684" to "as",
        "376" to "ad",
        "244" to "ao",
        "1264" to "ai",
        "672" to "aq",
        "1268" to "ag",
        "54" to "ar",
        "374" to "am",
        "297" to "aw",
        "61" to "cc",
        "43" to "at",
        "994" to "az",
        "1242" to "bs",
        "973" to "bh",
        "880" to "bd",
        "1246" to "bb",
        "375" to "by",
        "32" to "be",
        "501" to "bz",
        "229" to "bj",
        "1441" to "bm",
        "975" to "bt",
        "591" to "bo",
        "387" to "ba",
        "267" to "bw",
        "55" to "br",
        "246" to "io",
        "1284" to "vg",
        "673" to "bn",
        "359" to "bg",
        "226" to "bf",
        "257" to "bi",
        "855" to "kh",
        "237" to "cm",
        "1" to "us",
        "238" to "cv",
        "1345" to "ky",
        "236" to "cf",
        "235" to "td",
        "56" to "cl",
        "86" to "cn",
        "57" to "co",
        "269" to "km",
        "682" to "ck",
        "506" to "cr",
        "385" to "hr",
        "53" to "cu",
        "599" to "an",
        "357" to "cy",
        "420" to "cz",
        "243" to "cd",
        "45" to "dk",
        "253" to "dj",
        "1767" to "dm",
        "1809" to "do",
        "1829" to "do",
        "1849" to "do",
        "670" to "tl",
        "593" to "ec",
        "20" to "eg",
        "503" to "sv",
        "240" to "gq",
        "291" to "er",
        "372" to "ee",
        "251" to "et",
        "500" to "fk",
        "298" to "fo",
        "679" to "fj",
        "358" to "fi",
        "33" to "fr",
        "689" to "pf",
        "241" to "ga",
        "220" to "gm",
        "995" to "ge",
        "49" to "de",
        "233" to "gh",
        "350" to "gi",
        "30" to "gr",
        "299" to "gl",
        "1473" to "gd",
        "1671" to "gu",
        "502" to "gt",
        "441481" to "gg",
        "224" to "gn",
        "245" to "gw",
        "592" to "gy",
        "509" to "ht",
        "504" to "hn",
        "852" to "hk",
        "36" to "hu",
        "354" to "is",
        "91" to "in",
        "62" to "id",
        "98" to "ir",
        "964" to "iq",
        "353" to "ie",
        "441624" to "im",
        "972" to "il",
        "39" to "it",
        "225" to "ci",
        "1876" to "jm",
        "81" to "jp",
        "441534" to "je",
        "962" to "jo",
        "7" to "ru",
        "254" to "ke",
        "686" to "ki",
        "383" to "xk",
        "965" to "kw",
        "996" to "kg",
        "856" to "la",
        "371" to "lv",
        "961" to "lb",
        "266" to "ls",
        "231" to "lr",
        "218" to "ly",
        "423" to "li",
        "370" to "lt",
        "352" to "lu",
        "853" to "mo",
        "389" to "mk",
        "261" to "mg",
        "265" to "mw",
        "60" to "my",
        "960" to "mv",
        "223" to "ml",
        "356" to "mt",
        "692" to "mh",
        "222" to "mr",
        "230" to "mu",
        "262" to "re",
        "52" to "mx",
        "691" to "fm",
        "373" to "md",
        "377" to "mc",
        "976" to "mn",
        "382" to "me",
        "1664" to "ms",
        "212" to "eh",
        "258" to "mz",
        "95" to "mm",
        "264" to "na",
        "674" to "nr",
        "977" to "np",
        "31" to "nl",
        "687" to "nc",
        "64" to "pn",
        "505" to "ni",
        "227" to "ne",
        "234" to "ng",
        "683" to "nu",
        "850" to "kp",
        "1670" to "mp",
        "47" to "sj",
        "968" to "om",
        "92" to "pk",
        "680" to "pw",
        "970" to "ps",
        "507" to "pa",
        "675" to "pg",
        "595" to "py",
        "51" to "pe",
        "63" to "ph",
        "48" to "pl",
        "351" to "pt",
        "1787" to "pr",
        "1939" to "pr",
        "974" to "qa",
        "242" to "cg",
        "40" to "ro",
        "250" to "rw",
        "590" to "mf",
        "290" to "sh",
        "1869" to "kn",
        "1758" to "lc",
        "508" to "pm",
        "1784" to "vc",
        "685" to "ws",
        "378" to "sm",
        "239" to "st",
        "966" to "sa",
        "221" to "sn",
        "381" to "rs",
        "248" to "sc",
        "232" to "sl",
        "65" to "sg",
        "1721" to "sx",
        "421" to "sk",
        "386" to "si",
        "677" to "sb",
        "252" to "so",
        "27" to "za",
        "82" to "kr",
        "211" to "ss",
        "34" to "es",
        "94" to "lk",
        "249" to "sd",
        "597" to "sr",
        "268" to "sz",
        "46" to "se",
        "41" to "ch",
        "963" to "sy",
        "886" to "tw",
        "992" to "tj",
        "255" to "tz",
        "66" to "th",
        "228" to "tg",
        "690" to "tk",
        "676" to "to",
        "1868" to "tt",
        "216" to "tn",
        "90" to "tr",
        "993" to "tm",
        "1649" to "tc",
        "688" to "tv",
        "1340" to "vi",
        "256" to "ug",
        "380" to "ua",
        "971" to "ae",
        "44" to "gb",
        "598" to "uy",
        "998" to "uz",
        "678" to "vu",
        "379" to "va",
        "58" to "ve",
        "84" to "vn",
        "681" to "wf",
        "967" to "ye",
        "260" to "zm",
        "263" to "zw"
    )

    fun getCountryCode(simInfo: List<SubscriptionInfo>?, tm: TelephonyManager): String {
        return simInfo?.firstOrNull()?.countryIso?.ifEmpty {
            tm.networkCountryIso?.ifEmpty {
                getCountryCodeFromIccId(simInfo.firstOrNull()?.iccId)
            }
        } ?: getCountryCodeFromIccId(simInfo?.firstOrNull()?.iccId)
    }

    fun getCountryCodeFromIccId(iccId: String?): String {
        if (iccId == null)
            return "default"
        val iccIdWithoutDefaultDigit = iccId.substring(2)
        isoCodeMap.forEach {
            if (iccIdWithoutDefaultDigit.startsWith(it.key)) {
                return it.value
            }
        }
        return "default"
    }
}